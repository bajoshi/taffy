# LZIFU fit parameter changes for fitting each pixel

# Simply copy pasting from lzifu_TAFFY.pro
# for most of the pixels I used the follwing params. 
-----------------------------------------------------------------------------------------------------------
PRO lzifu_TAFFY,_extra=extra
; This is a template
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Start settings ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
set = { Settings, $
only_1side             : 0                 , $  ; 0: 2-sided data. 1: 1-sided data
; For fitting
obj_name               : 'Taffy'           , $  ; Object name
z                      :  0.0145           , $  ; Redshift
;;;;;;;;;;;;;;;;;;    Fitting range and masking    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
fit_ran                : [4700,6855],$          ; fitting range in A
b_ext_mask             : [[5550-10,5550+10], $ ; edge effect blue long spec; [[5270-35,5270+35]], $
[5315-3,5315+100]],$   ; Sky line at 6499
r_ext_mask             : [[6300-3,6300+3],$   ; Sky line at 6300
                          [6200-10,6200+10],$   ; edge effect red spec
                          [6499-3,6499+3],$   ; Sky line at 6499
                          [6333-3,6333+3],$   ; Sky line at 6333
                          [6533-1,6533+1], $ ; Sky line at 6533
                          [6553-1,6553+1]], $ ; sky line at 6553                        
ext_mask               : [[5577-5,5577+5], $	; Sky line at 5577
                          [6360-5,6360+5]],$  ; Sky line at 6360
;;;;;;;;;;;;;;;;;;;;;;;;;;;   Data resolution    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
b_resol_sigma          : 1.6         , $       ; data resolution in Angstrom 
r_resol_sigma          : 1.6         , $       ; data resolution in Angstrom
resol_sigma            : 1.5         , $       ; data resolution in Angstrom
;;;;;;;;;;;;;;;;;;;; External continuum model   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
supply_ext_cont      : 0, $                     ; 1 = YES, I want to provide external continuum. 0 = NO. 
ext_cont_path        : '../products/',$         ; path to external continuum model
ext_cont_name        : '',$                     ; external continuum model name
load_ext_cont_func   : 'lzifu_load_ext_cont',$  ; 
;;;;;;;;;;;;;;;;;;;;;;;;;  External 2D mask   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 1 = I want to fit this spaxel. 0 = I don't want to fit this spaxel.
supply_mask_2d        : 0 , $                   ; 1 = YES. Use external 2d mask. 0 = No. Don't use. Fit all spaxels possible. 
mask_2d_path          : '', $                   ; path of the 2d mask file.
mask_2d_name          : '', $                   ; name of the 2d mask file. 
load_mask_2d_func     : 'lzifu_load_2d_mask', $ ; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;   Data I/O   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
data_path              : '../data/',$                   ; path to data
product_path           : '../products/',$                   ; path to output
load_cube_func         : 'lzifu_load_cube', $   ;
;;;;;;;;;;;;;;;;;;;;;;;;;;   SSP template   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
temp_resol_sigma       : 0.3, $   	            ; template resolution  
template_path          : '/Users/baj/Desktop/ipac/LZIFU-1.1/stellar_models/gonzalezdelgado/',$ ;template path 
template_name          : ['cond_SSPPadova_z004.sav','cond_SSPPadova_z008.sav','cond_SSPPadova_z019.sav'], $ ; template names
;;;;;;;;;;;;;;;;;   Continuum fitting with ppxf   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
mask_width             : 12.,$                   ; Full width to mask around emission lines defined in lzifu_linelist.pro
cont_vel_sig_guess     : [0., 50.], $          ; Starting guess of delV and vel_dispersion of continuum (in km/s)
cont_ebv_guess         : 0.1      , $            ; Starting guess of ebv
degree                 : -1 , $                  ; Additive Legendre polynomial simultaneously fitted with continuum (-1 for no polynomials).
mdegree                : 3  , $                  ; Multiplicative Legendre polynomial (0 for no polynomials)
moments                : 2  , $                  ; Order of the Gauss-Hermite moments. Can only be 2,4,6 [recommend: 2]
r_resid_degree         : 3 , $                  ; Degree for fitting residual (red). -1 = don't fit. 
b_resid_degree         : 3 , $                  ; Degree for fitting residual (blue).  -1 = don't fit. 
resid_degree           : -1 , $                  ; Degree for fitting residual (one-sided).  -1 = don't fit. 
ppxf_clean             : 1  , $                  ; use CLEAN keyword in ppxf? 1 = YES. 0 = No.
;;;;;;;;;;;;;;;;;   Eission fitting with mpfit   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
fit_dlambda            : 22.       , $            ; Full width around line centers to be fitted. (A)
ncomp                  : 1        , $            ; Number of component. 
line_sig_guess         : 70.       ,$             ; Initial guess of velocity dispersion for emission line (km/s)
vdisp_ran              : [-50,500.],$            ; Velocity dispersion constraints in km/s. 
vel_ran                : [-600.,+600.],$         ; Velocity contraints in km/s. 0 is systemic velocity from set.z
sort_type              : 'vel', $              ; 'vdisp', 'vel' or linelabel in linelist_func. Component sorting method. 
; variation in initial guess
comp_2_damp            : [0.6],$
comp_2_dvel            : [-150,-50,+50,+150],$
comp_2_dvdisp          : [+20],$
comp_3_damp            : [0.3],$
comp_3_dvel            : [-50, +50],$
comp_3_dvdisp          : [+200],$
; Re-fit with smoothed initial guess?
n_smooth_refit       : 2       , $             ; Number of iterations
smooth_width         : 5        , $            ; Spatial width (pixel) of smoothing
; What lines to fit? what lines to mask?
linelist_func          : 'lzifu_linelist_TAFFY', $     ; Name of linelist function
; Run mode
ncpu                   : 4 $                      ; Max number of CPUs used. 1 - 15  (> 1 for parallel processing)
}
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; end settings ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

-----------------------------------------------------------------------------------------------------------
Procedure for filling in fitting for individual spaxels:
0. Open idl editing window with loop_spaxel.pro and lzifu_TAFFY.pro open.
1. Open ds9 and check what pixels are already done. Use .../products/*B_LINE.fits and .../products/*R_LINE.fits
2. Run LZIFU with updated params on the indiv spaxel where fitting failed previously.
3. This will produce a resultant fits file called TAFFY_2_comp.fits in .../products/
4. You can run check_lzifu_fits.py on the pixel that was just fitted.
5. If satisfied then edit the current pixel coords in stitch_pix.py and run that code to stitch that pixel.
6. The stitched file is called big_cube_2_comp.fits and is in the TAFFY directory 
7. If you need to check how many pixels have been done up to now then put the big_cube_2_comp.fits in the 
.../products_test/ folder and run separate_fits_extensions.py on it and check what B_LINE and R_LINE looks like.
8. Repeat process on as many pixels as required.

-----------------------------------------------------------------------------------------------------------
# from this point on I will only record the changes made to the fitting params that worked.
# the pix coords here are ds9 referenced coords

----------------------------------------------------1-------------------------------------------------------